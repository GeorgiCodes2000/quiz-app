{"version":3,"sources":["Components/Questions.js","Components/EndScreen.js","Components/MainMenu.js","Components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Questions","question","optionA","optionB","optionC","answer","EndScreen","setquizState","score","setScore","className","length","onClick","MainMenu","quizState","Quiz","useState","currentQustion","setCurrentQuestion","choose","setChoose","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAaA,G,MAAY,CACrB,CACIC,SAAU,yBACVC,QAAS,UACTC,QAAS,SACTC,QAAS,YACTC,OAAQ,KAGZ,CACIJ,SAAU,mBACVC,QAAS,+BACTC,QAAS,6BACTC,QAAS,yBACTC,OAAQ,KAGZ,CACIJ,SAAU,gCACVC,QAAS,mBACTC,QAAS,iBACTC,QAAS,iBACTC,OAAQ,KAGZ,CACIJ,SAAU,4DACVC,QAAS,SACTC,QAAS,oBACTC,QAAS,iBACTC,OAAQ,KAGZ,CACIJ,SAAU,qDACVC,QAAS,aACTC,QAAS,SACTC,QAAS,QACTC,OAAQ,O,OCpBDC,MAhBf,YAAqD,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAOrC,OACI,sBAAKC,UAAU,YAAf,UACI,+CACA,6BAAKF,EAAQ,IAAMR,EAAUW,SAC7B,wBAAQC,QAThB,WACIH,EAAS,GACTF,EAAa,SAOT,4BCJGM,MATf,YAA6C,EAA1BC,UAA2B,IAAhBP,EAAe,EAAfA,aAE1B,OACI,qBAAKG,UAAU,OAAf,SACI,wBAAQE,QAAS,kBAAIL,EAAa,SAAlC,2BCmCGQ,MAnCf,YAA0D,EAA3CD,UAA4C,IAAjCP,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAE3C,EAA6CO,mBAAS,GAAtD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KAiBA,OACI,sBAAKV,UAAU,OAAf,UACI,6BAAKV,EAAUiB,GAAgBhB,WAC/B,sBAAKS,UAAU,UAAf,UACI,wBAAQE,QAAS,kBAAIQ,EAAU,MAA/B,SAAsCpB,EAAUiB,GAAgBf,UAChE,wBAAQU,QAAS,kBAAIQ,EAAU,MAA/B,SAAsCpB,EAAUiB,GAAgBd,UAChE,wBAAQS,QAAS,kBAAIQ,EAAU,MAA/B,SAAsCpB,EAAUiB,GAAgBb,aAGlEa,IAAmBjB,EAAUW,OAAO,EAAI,wBAAQC,QAxB1D,WACIQ,EAAU,MACNpB,EAAUiB,GAAgBZ,SAAWc,GACpCV,EAASD,EAAM,GAEnBU,EAAmBD,EAAiB,IAmBiCP,UAAU,OAAlC,2BAAkE,wBAAQE,QAhB5H,WACOZ,EAAUiB,GAAgBZ,SAAWc,GACpCV,EAASD,EAAM,GAEnBD,EAAa,cAYmG,wBCZzGc,MAff,WAEE,MAAmCL,mBAAS,QAA5C,mBAAOF,EAAP,KAAmBP,EAAnB,KACA,EAA2BS,mBAAS,GAApC,mBAAOR,EAAP,KAAcC,EAAd,KAEA,OACE,sBAAKC,UAAU,MAAf,UACkB,SAAdI,GAAwB,cAAC,EAAD,CAAUA,UAAWA,EAAWP,aAAcA,IACxD,SAAdO,GAAwB,cAAC,EAAD,CAAMA,UAAWA,EAAWP,aAAcA,EAAcC,MAAOA,EAAOC,SAAUA,IAC1F,cAAdK,GAA6B,cAAC,EAAD,CAAWP,aAAcA,EAAcC,MAAOA,EAAOC,SAAUA,QCHrFa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6f8177bb.chunk.js","sourcesContent":["export const Questions = [\r\n    {\r\n        question: \"Who is Geralt Of Rivia\",\r\n        optionA: 'Witcher',\r\n        optionB: 'Banker',\r\n        optionC: 'Developer',\r\n        answer: 'A'  \r\n    },\r\n\r\n    {\r\n        question: \"JSON stands for \",\r\n        optionA: 'Java Standard Output Network',\r\n        optionB: 'JavaScript Object Notation',\r\n        optionC: 'JavaScript Output Name',\r\n        answer: 'B'  \r\n    },\r\n\r\n    {\r\n        question: \"What is Darth Vader real name\",\r\n        optionA: 'Anakin Skywalker',\r\n        optionB: 'Luke Skywalker',\r\n        optionC: 'Obi-Wan Kenobi', \r\n        answer: 'A'  \r\n    },\r\n\r\n    {\r\n        question: \"What was the first video game ever to be played in space?\",\r\n        optionA: 'Tetris',\r\n        optionB: 'World of Warcraft',\r\n        optionC: 'Lego Star Wars',\r\n        answer: 'A'  \r\n    },\r\n\r\n    {\r\n        question: \"What food was the inpiration for the game Pac-Man?\",\r\n        optionA: 'Hamburgers',\r\n        optionB: 'Lemons',\r\n        optionC: 'Pizza',\r\n        answer: 'C'  \r\n    },\r\n\r\n\r\n\r\n\r\n]","import { Questions } from \"./Questions\"\r\n\r\nfunction EndScreen({setquizState, score, setScore}) {\r\n\r\n    function restart() {\r\n        setScore(0);\r\n        setquizState('quiz');\r\n    }\r\n\r\n    return(\r\n        <div className=\"Endscreen\">\r\n            <h1>Quiz Finished</h1>\r\n            <h2>{score + '/' + Questions.length}</h2>\r\n            <button onClick={restart}>Start Quiz</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EndScreen;","function MainMenu({quizState, setquizState}) {\r\n\r\n    return(\r\n        <div className=\"Menu\">\r\n            <button onClick={()=>setquizState('quiz')}>Start Quiz</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainMenu;","import { useState } from \"react\";\r\nimport { Questions } from \"../Components/Questions\"\r\n\r\n\r\nfunction Quiz({quizState, setquizState, score, setScore}) {\r\n\r\n    const [currentQustion, setCurrentQuestion] = useState(0);\r\n    const [choose, setChoose] = useState(null);\r\n\r\n    function nextQ() {\r\n        setChoose(null);\r\n         if(Questions[currentQustion].answer === choose){\r\n             setScore(score+1);\r\n         }\r\n         setCurrentQuestion(currentQustion + 1);\r\n    }\r\n    \r\n    function finishQ() {\r\n        if(Questions[currentQustion].answer === choose){\r\n            setScore(score+1);\r\n        }\r\n        setquizState('endScreen');\r\n    }\r\n\r\n    return(\r\n        <div className=\"Quiz\">\r\n            <h1>{Questions[currentQustion].question}</h1>\r\n            <div className=\"options\">\r\n                <button onClick={()=>setChoose('A')}>{Questions[currentQustion].optionA}</button>\r\n                <button onClick={()=>setChoose('B')}>{Questions[currentQustion].optionB}</button>\r\n                <button onClick={()=>setChoose('C')}>{Questions[currentQustion].optionC}</button>\r\n             </div>\r\n\r\n             {currentQustion !== Questions.length-1 ? <button onClick={nextQ} className=\"next\">Next Question</button> : <button onClick={finishQ}>Finish</button> }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;"," import { useState } from 'react';\nimport './App.css';\nimport EndScreen from './Components/EndScreen';\nimport MainMenu from './Components/MainMenu';\nimport Quiz from './Components/Quiz';\n\nfunction App() {\n\n  const [quizState , setquizState] = useState(\"menu\");\n  const [score, setScore ] = useState(0);\n\n  return (\n    <div className=\"App\">\n       {quizState === 'menu' && <MainMenu quizState={quizState} setquizState={setquizState}/>}\n       {quizState === 'quiz' && <Quiz quizState={quizState} setquizState={setquizState} score={score} setScore={setScore} />}\n       {quizState === 'endScreen' && <EndScreen setquizState={setquizState} score={score} setScore={setScore}/>}\n        \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}